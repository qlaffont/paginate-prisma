name: CI
on: [push]
jobs:
  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ["20.x"]
        os: [ubuntu-latest]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install PNPM
        uses: pnpm/action-setup@v4.0.0

      - name: Install deps and build (with cache)
        run: pnpm install --no-frozen-lockfile

      - run: pnpm prisma:generate

      - name: Lint
        run: pnpm lint

      - run: pnpm prisma:deploy

      - name: Test
        run: pnpm test -- --ci --coverage --maxWorkers=2

      - name: Build
        run: pnpm build
  coverage:
    name: coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - uses: pnpm/action-setup@v4.0.0
      - name: Install deps and build (with cache)
        run: pnpm install --no-frozen-lockfile
      - run: pnpm prisma:generate
      - run: pnpm prisma:deploy
      - run: pnpm test
      - uses: paambaati/codeclimate-action@v8.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          debug: true
